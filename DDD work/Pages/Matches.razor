@page "/matches"

@using DDD_work.Models

@using DDD_work.Services

@using DDD_work.Services.Match

@using DDD_work.Services.Auth

@inject UserService UserService 

@inject UserDataService UserDataService 

@inject NavigationManager NavigationManager 

@inject MatchService MatchService 



<h1>My Matches</h1>



@if (UserService.CurrentUser == null) // if no one's logged in

{

	<p>Please log in to view your matches.</p>

}

else // if someone is logged in

{

	@if (matches != null && matches.Any()) // if we found some matches

	{

		<ul>

			@foreach (var match in matches) // loop through each match

			{

				<li>

					@match.FullName 

					<button class="btn btn-primary btn-sm ms-2" @onclick="() => GoToChat(match.UserID)">Chat</button>

				</li>

			}

		</ul>

	}

	else // if no matches yet

	{

		<p>No matches yet.</p>

	}

}



@code {

	private List<User> matches; // a list to hold the users we've matched with



	protected override async Task OnInitializedAsync() // when the page loads

	{

		if (UserService.CurrentUser != null) // if someone is logged in

		{

			await LoadMatches(); // go get the matches

		}

	}



	private async Task LoadMatches() // this gets the list of matches

	{

		matches = new List<User>(); // start with an empty list

		if (UserService.CurrentUser != null) // make sure someone's logged in

		{

			var potentialMatches = MatchService.GetPotentialMatches(); // get all the potential matches

			var currentUser = UserService.CurrentUser; // who is logged in



			foreach (var matchPair in potentialMatches) // go through each potential match

			{

				if (matchPair.User1Id == currentUser.UserID) // if the current user is user1 in the pair

				{

					var matchedUser = await UserDataService.GetUserByIdAsync(matchPair.User2Id); // get info about user2

					if (matchedUser != null) // if we found user2

					{

						matches.Add(matchedUser); // add them to our matches list

					}

				}

				else if (matchPair.User2Id == currentUser.UserID) // if the current user is user2

				{

					var matchedUser = await UserDataService.GetUserByIdAsync(matchPair.User1Id); // get info about user1

					if (matchedUser != null) // if we found user1

					{

						matches.Add(matchedUser); // add them to our matches list

					}

				}

			}

		}

	}



	private void GoToChat(long otherUserId) // when you click the chat button

	{

		if (UserService.CurrentUser != null) // make sure someone's logged in

		{

			// go to the chat page with the current user and the person they matched with

			NavigationManager.NavigateTo($"/chat/{UserService.CurrentUser.UserID}/{otherUserId}");

		}

	}

}

